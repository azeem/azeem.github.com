<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Azeem Arshad</title>
        <link>http://azeemarshad.in</link>
        <description>Azeem Arshad&#39;s Personal Pages</description>
        
            <item>
                <title>jstatic - Flexible static site generation</title>
                <pubDate>Sat, 31 Aug 2013 12:24:00 +0530</pubDate>
                <link>http://azeemarshad.in/posts/introducing_jstatic.html</link>
                <guid>http://azeemarshad.in/posts/introducing_jstatic.html</guid>
                <description>
                    <![CDATA[
                        jstatic is a static html site generation task for grunt. With jstatic i am trying to realize a generic pattern for static site generation tasks, a simple model thats easy to understand, flexible and easily extensible. Like assemble, jstatic is also designed as a grunt task. This is rather convenient, because Grunt provides excellent facilities for lot of the boilerplates tasks (minification, copying assets etc.). This also makes it easier to integrate jstatic for documentation or project pages generation in projects that uses grunt.
                    ]]>
                </description>
            </item>
        
            <item>
                <title>Organizing Git Repo for Github User Pages</title>
                <pubDate>Sat, 10 Aug 2013 14:10:00 +0530</pubDate>
                <link>http://azeemarshad.in/posts/organizing_git_for_githubpages.html</link>
                <guid>http://azeemarshad.in/posts/organizing_git_for_githubpages.html</guid>
                <description>
                    <![CDATA[
                        This site, is hosted on the fantastic Github Pages service. 
If you are using some tool like jekyll or assemble or my personal project: jstatic
to generate your static html then you will end up with a bunch of source files (markdown files,
config files. templates etc.) that the tool uses to generate the site. Managing the source
files separately is rather cumbersome. Fortunately git has some nice little features that
makes it easier.
                    ]]>
                </description>
            </item>
        
            <item>
                <title>Yago Loader</title>
                <pubDate>Sun, 18 Mar 2012 23:21:00 +0530</pubDate>
                <link>http://azeemarshad.in/posts/yago_loader.html</link>
                <guid>http://azeemarshad.in/posts/yago_loader.html</guid>
                <description>
                    <![CDATA[
                        Yago is a huge semantic knowledge base, containing millions of facts about millions of entities (People, Organizations, Places etc.). I have been playing around with Yago some time back. I was going through the stuff again this weekend and I came across this small loader program that I had written back then.
                    ]]>
                </description>
            </item>
        
            <item>
                <title>Diagram connector routing</title>
                <pubDate>Tue, 10 Jan 2012 06:45:00 +0530</pubDate>
                <link>http://azeemarshad.in/posts/diagram_connector_routing.html</link>
                <guid>http://azeemarshad.in/posts/diagram_connector_routing.html</guid>
                <description>
                    <![CDATA[
                        I have been trying to find some interesting coding stuff to work on, something to get off of the
line of work that i do at my day job, relive the college days :P. This is an interesting
problem that came up when i tried to dust off one of my old javascript projects. In simple words, the
problem goes something like this: given a flow chart, how do you automatically render orthogonal
flow lines without intersections or collisions.
                    ]]>
                </description>
            </item>
        
            <item>
                <title>N Queens Puzzle</title>
                <pubDate>Wed, 22 Jul 2009 00:48:00 +0530</pubDate>
                <link>http://azeemarshad.in/posts/n-queens-puzzle.html</link>
                <guid>http://azeemarshad.in/posts/n-queens-puzzle.html</guid>
                <description>
                    <![CDATA[
                        I've been reading this great book, Structure and Interpretation 
of Computer Programs for the last few days. The examples are full of really cool math, algorithms, techniques and stuff. Here is an exercise that i managed to solve in scheme, The Eight queens puzzle.
                    ]]>
                </description>
            </item>
        
    </channel>
</rss>
